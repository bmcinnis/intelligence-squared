install.packages(c("class", "digest", "doBy", "foreign", "gtools", "lattice", "MASS", "Matrix", "mgcv", "multcomp", "mvtnorm", "nlme", "nnet", "rpart", "slam", "spatial", "survival", "tm"))
## Intelligence Squared US
## 2014-02-25 Brian McInnis
## Objective:  Depict turntaking during debate section (R3)
#  by LIWC function word categories (as percent of statement words)
#  also showing Opening Statement and Closing Statements as
#  baseline.
## Load libraries
rm(list = ls());
require(gdata);
i2us<-read.xls(xls=r'/Users/bjm277/code/intelligence-squared/debateData (2014-02-22).xlsx',
sheet=1);
## Intelligence Squared US
## 2014-02-25 Brian McInnis
## Objective:  Depict turntaking during debate section (R3)
#  by LIWC function word categories (as percent of statement words)
#  also showing Opening Statement and Closing Statements as
#  baseline.
## Load libraries
rm(list = ls());
require(gdata);
i2us<-read.xls(xls='/Users/bjm277/code/intelligence-squared/debateData (2014-02-22).xlsx',
sheet=1);
i2us<-read.xls(xls='/Users/bjm277/code/intelligence-squared/debateData (2014-02-22).xlsx',
sheet=1,
na.strings=c("NA","#DIV/0!"));
i2us<-read.xlsx(xls='/Users/bjm277/code/intelligence-squared/debateData (2014-02-22).xlsx',
sheet=1,
na.strings=c("NA","#DIV/0!"));
require(xlsx);
install.packages("xlsx")
require(xlsx);
i2us<-read.xlsx(file='/Users/bjm277/code/intelligence-squared/debateData (2014-02-22).xlsx',
sheetIndex=1);
i2us.dr<-read.xlsx(
file='/Users/bjm277/code/intelligence-squared/debateData (2014-02-22).xlsx',
sheetName='Results'
);
View(`i2us.dr`)
View(`i2us.dr`)
## Intelligence Squared US (I2US)
## 2014-02-25 Brian McInnis
## Objective:  Depict turntaking during debate section (R3)
#  by LIWC function word categories (as percent of statement words)
#  also showing Opening Statement and Closing Statements as
#  baseline.
## Clear recent variables
rm(list = ls());
## Load libraries
require(xlsx);
## Using XLSX read the I2US results to memory as a dataframe (14 variables, 21 obs.)
i2us.dr<-read.xlsx(
file='/Users/bjm277/code/intelligence-squared/debateData (2014-02-22).xlsx',
sheetName='Results'
);
## Using XLSX read the I2US data to memory as a dataframe (73 variables, 6,024 obs.)
#  This takes a while because the statement strings are very long.
i2us.dd<-read.xlsx(
file='/Users/bjm277/code/intelligence-squared/debateData (2014-02-22).xlsx',
sheetName='DebateData'
);
## Intelligence Squared US (I2US)
## 2014-02-25 Brian McInnis
## Objective:  Depict turntaking during debate section (R3)
#  by LIWC function word categories (as percent of statement words)
#  also showing Opening Statement and Closing Statements as
#  baseline.
## Clear recent variables
rm(list = ls());
## Load libraries
require(xlsx);
## Using XLSX read the I2US results to memory as a dataframe (14 variables, 21 obs.)
i2us.dr<-read.xlsx(
file='/Users/bjm277/code/intelligence-squared/debateData (2014-02-22).xlsx',
sheetName='Results'
);
## Using XLSX read the I2US data to memory as a dataframe (73 variables, 6,024 obs.)
#  This takes a while because the statement strings are very long.
i2us.dd<-read.xlsx(
file='/Users/bjm277/code/intelligence-squared/debateData (2014-02-22).xlsx',
sheetName='DDwoStatement'
);
## Intelligence Squared US (I2US)
## 2014-02-25 Brian McInnis (Last update: 2014-04-04)
## Objective:  Depict turntaking during debate section (R3)
#  by LIWC function word categories (as percent of statement words)
#  also showing Opening Statement and Closing Statements as
#  baseline.
## Clear memory
#   Quite likely you will need to run this program twice,
#   Clearing the memory each time to build both the DR and DD
#   Objects.  This is mainly because the full text is included.
rm(list = ls());
## Install and load any necessary packages
pack <- c('plyr','xlsx','XLConnect','ggplot2','data.table','reshape','tm', 'topicmodels');
for (p in pack) {
print(p);
if(p %in% rownames(installed.packages()) == FALSE){
install.packages(p);
}
if(p %in% rownames(installed.packages()) == TRUE){
require(p,character.only=TRUE);
}
}
rm(p,pack);
## Create the I2US Environment
setwd('/Users/bjm277/code/intelligence-squared/')
lf<-list.files(pattern = '^i2us[.]rda[ta]*$',
ignore.case = TRUE);
if (length(lf)==0) {
i2us <- new.env();
## Load XLSX libraries
require(xlsx);
options(java.parameters = "-Xmx1024m")
require(XLConnect)
rm(lf);
}else{
load(lf[1]);
rm(lf);
}
## Using XLSX read the I2US results to memory as a dataframe (14 variables, 21 obs.)
if (exists("dr",where=i2us)==FALSE){
dr<-read.xlsx(
file='debateData (2014-02-22).xlsx',
sheetName='Results'
);
assign("dr", dr, envir = i2us);
## Save the i2us environment to the working directory
save(i2us, file = "i2us.RData");
rm(dr);
}
if (exists("dd",where=i2us)==FALSE){
## Using XLSX read the I2US data to memory as a dataframe (73 variables, 6,024 obs.)
#  This takes a while because the statement strings are very long.
dd<-read.xlsx(
file='debateData (2014-02-22).xlsx',
#              sheetName='DDwoStatement'
sheetName='DebateData'
);
assign("dd", dd, envir = i2us);
## Save the i2us environment to the working directory
save(i2us, file = "i2us.RData");
rm(dd);
}
## At this point the i2us environment is loaded, whether by opening
#  the XLSX files and reading them in, or merely reopening the environment
#  from the working directory.  Now, perform some quick checks on the
#  data before producing the LIWC percentages and a ggplot to display them
#  by debate and speaker turn.
attach(i2us);
## Create an outcome variable to indicate which side won the debate
dr$outcome[(dr$poll.delta.against>dr$poll.delta.for)]<-"against";
dr$outcome[(dr$poll.delta.against<dr$poll.delta.for)]<-"for";
dr$outcome[(dr$outcome=="")]<-"undecided";
xtabs(formula=~outcome, data=dr);
xtabs(formula=title~outcome, data=dr);
xtabs(formula=~outcome+title, data=dr);
xtabs(formula=~title+outcome, data=dr);
addmargins(xtabs(formula=~title+outcome, data=dr));
addmargins(xtabs(formula=~title+outcome, data=dr),1);
prop.table(xtabs(formula=~title+outcome, data=dr),1);
prop.table(xtabs(formula=~title+outcome, data=dr));
addmargins(xtabs(formula=~title+outcome, data=dr),1);
dr$margin<-abs(dr$poll.delta.against-dr$poll.delta.for);
addmargins(xtabs(formula=margin~title+outcome, data=dr),1);
summary(dr$margin)
summary(dr$outcome)
summary(dr$margin)
addmargins(xtabs(formula=margin~outcome, data=dr),1);
addmargins(xtabs(formula=margin~title+outcome, data=dr),1);
summary(dr$outcome)
addmargins(xtabs(formula=~title+outcome, data=dr),1);
11/10
11/(21)
summary(dr$margin);
names(dr)
dr$margin.before<-dr$poll.before.against-dr$poll.before.for;
dr$margin.after<-dr$poll.after.against-dr$poll.after.for;
dr$margin.delta<-dr$poll.delta.against-dr$poll.delta.for;
summary(dr$margin.before);
xtabs(formula=margin.before~outcome, data=dr);
xtabs(formula=margin.before~title+outcome, data=dr);
addmargins(xtabs(formula=margin.before~title+outcome, data=dr),1);
summary(dr$margin.before);
summaryBy(formula=margin.before~outcome,data=dr)
library(summaryBy)
library(doBy)
summaryBy(formula=margin.before~outcome,data=dr)
summaryBy(formula=margin.before~outcome, data=dr, FUN=c(mean,median,var,length));
library(help="base")
summaryBy(formula=margin.after~outcome, data=dr, FUN=c(mean,median,length));
summaryBy(formula=margin.before~outcome, data=dr, FUN=c(mean,median,length));
# (21 files) AGAINST begins on Avg. +3.52% (+9.00% median) above FOR
summaryBy(formula=margin.after~outcome, data=dr, FUN=c(mean,median,length));
# (21 files) AGAINST begins on Avg. +3.52% (+9.00% median) above FOR
names(dr)
summaryBy(formula=poll.undecided~outcome, data=dr, FUN=c(mean,median,length));
summaryBy(formula=poll.before.undecided~outcome, data=dr, FUN=c(mean,median,length));
summaryBy(formula=poll.before.undecided~outcome, data=dr, FUN=c(mean,median));
summaryBy(formula=poll.after.undecided~outcome, data=dr, FUN=c(mean,median));
dr$persuadable<-(dr$poll.before.undecided-dr$poll.after.undecided);
summaryBy(formula=persuadable~outcome, data=dr, FUN=c(mean,median));
summaryBy(formula=poll.delta.against~outcome, data=dr, FUN=c(mean,median));
summaryBy(formula=poll.delta.for~outcome, data=dr, FUN=c(mean,median));
View(dr)
View(dr[,c("poll.after.against","poll.before.against","poll.delta.against")])
dr$change.against<-(dr$poll.before.against-dr$poll.after.against)
View(dr[,c("poll.after.against","poll.before.against","poll.delta.against","change.against")])
## Intelligence Squared US (I2US)
## 2014-02-25 Brian McInnis (Last update: 2014-04-04)
## Objective:  Depict turntaking during debate section (R3)
#  by LIWC function word categories (as percent of statement words)
#  also showing Opening Statement and Closing Statements as
#  baseline.
## Note on the commenting scheme:
#  In most cases the questions/steps were written before any of the
#  R script, and for that reason there's an odd commenting scheme.
#  The first large blocks of code are devoted to building up the
#  local dataset so that we can do some work on it.  The remainder
#  of the script is commented with the following question-answer
#  pattern.  You will see blocks of questions:  (1) Q1, (2) Q2, etc.
#  followed by blocks of steps in answering the questions: [1.a],
#  [1.b], for question 1 and [2.a], [2.b] for question 2.
## Clear memory
#  Quite likely you will need to run this program twice,
#  Clearing the memory each time to build both the DR and DD
#  Objects.  This is mainly because the full text is included.
rm(list = ls());
## Install and load any necessary packages
pack <- c('plyr','doBy','xlsx','XLConnect','ggplot2','data.table','reshape','tm', 'topicmodels');
for (p in pack) {
print(p);
if(p %in% rownames(installed.packages()) == FALSE){
install.packages(p);
}
if(p %in% rownames(installed.packages()) == TRUE){
require(p,character.only=TRUE);
}
}
rm(p,pack);
## Create the I2US Environment
setwd('/Users/bjm277/code/intelligence-squared/')
lf<-list.files(pattern = '^i2us[.]rda[ta]*$',
ignore.case = TRUE);
if (length(lf)==0) {
i2us <- new.env();
## Load XLSX libraries
require(xlsx);
options(java.parameters = "-Xmx1024m")
require(XLConnect)
rm(lf);
}else{
load(lf[1]);
rm(lf);
}
## Using XLSX read the I2US results to memory as a dataframe (14 variables, 21 obs.)
if (exists("dr",where=i2us)==FALSE){
dr<-read.xlsx(
file='debateData (2014-02-22).xlsx',
sheetName='Results'
);
assign("dr", dr, envir = i2us);
## Save the i2us environment to the working directory
save(i2us, file = "i2us.RData");
rm(dr);
}
if (exists("dd",where=i2us)==FALSE){
## Using XLSX read the I2US data to memory as a dataframe (73 variables, 6,024 obs.)
#  This takes a while because the statement strings are very long.
dd<-read.xlsx(
file='debateData (2014-02-22).xlsx',
#              sheetName='DDwoStatement'
sheetName='DebateData'
);
assign("dd", dd, envir = i2us);
## Save the i2us environment to the working directory
save(i2us, file = "i2us.RData");
rm(dd);
}
## At this point the i2us environment is loaded, whether by opening
#  the XLSX files and reading them in, or merely reopening the environment
#  from the working directory.  Now, perform some quick checks on the
#  data before producing the LIWC percentages and a ggplot to display them
#  by debate and speaker turn.
attach(i2us);
## Explore the dataset a little bit:
# (1) Does one side generally win the debate?
# (2) What is the average margin of victory?
# (3) Does the side that talks more win?
## [1.a:  Create outcome and margin variables to indicate which side won the debate]
dr$outcome[(dr$poll.delta.against>dr$poll.delta.for)]<-"against";
dr$outcome[(dr$poll.delta.against<dr$poll.delta.for)]<-"for";
dr$outcome[(dr$outcome=="")]<-"undecided";
dr$persuadable<-(dr$poll.before.undecided-dr$poll.after.undecided);
## [1.b:  Tabulate by outcome and then by margin]
addmargins(xtabs(formula=~title+outcome, data=dr),1);
# (21 files) 11/10 (52.3% AGAINST vs. FOR)
summaryBy(formula=poll.before.undecided~outcome, data=dr, FUN=c(mean,median));
# (21 files) A little less than a THIRD of the audience is undecided ahead of a debate
summaryBy(formula=poll.after.undecided~outcome, data=dr, FUN=c(mean,median));
# (21 files) After the debate about 8% remain undecided, meaning that on avg. 22% of the audience is persuadable
summaryBy(formula=persuadable~outcome, data=dr, FUN=c(mean,median));
# (21 files) 22-24% on avg. are persuaded through the debate, assuming that the
#   Audience members with existing opinions do not change their vote.
summaryBy(formula=poll.delta.against~outcome, data=dr, FUN=c(mean,median));
summaryBy(formula=poll.delta.for~outcome, data=dr, FUN=c(mean,median));
# (21 files) 22-24% on avg. are persuaded through the debate, assuming that the
summaryBy(formula=poll.after.against~outcome, data=dr, FUN=c(mean,median));
summaryBy(formula=poll.after.for~outcome, data=dr, FUN=c(mean,median));
# (21 files) Though we don't know whether there is back and forth within the
dr$margin<-(dr$poll.after.for-dr$poll.after.against);
summaryBy(formula=margin~outcome, data=dr, FUN=c(mean,median));
summary(dr$margin)
summary(dr$persuadable)
dr$margin<-abs(dr$poll.after.for-dr$poll.after.against);
summary(dr$margin)
dr$persuadable<-abs(dr$poll.before.undecided-dr$poll.after.undecided);
summary(dr$persuadable)
dr$margin.abs<-abs(dr$poll.after.for-dr$poll.after.against);
dr$margin.delta<-(dr$poll.delta.for-dr$poll.delta.against);
summaryBy(formula=margin.abs~outcome, data=dr, FUN=c(mean,median));
summaryBy(formula=margin.delta~outcome, data=dr, FUN=c(mean,median));
# (21 files) The margin of victory is on average 26-29% (skewed toward 30%)
dr$margin.delta<-abs(dr$poll.delta.for-dr$poll.delta.against);
summaryBy(formula=margin.delta~outcome, data=dr, FUN=c(mean,median));
# (21 files) The margin of victory is on average 26-29% (skewed toward 30%)
cor.test(formula=margin.abs~persuadable,data=dr);
cor.test(formula=~margin.abs+persuadable,data=dr);
cor.test(formula=~margin.delta+persuadable,data=dr);
cor.test(formula=~persuadable+margin.delta,data=dr);
cor.test(formula=~persuadable+outcome,data=dr);
cor.test(formula=~persuadable+poll.delta.against,data=dr);
cor.test(formula=~persuadable+margin.delta,data=dr);
cor.test(formula=~persuadable+margin.abs,data=dr);
dr$persuadable<-(dr$poll.before.undecided-dr$poll.after.undecided);
dr$margin.abs<-(dr$poll.after.for-dr$poll.after.against);
dr$margin.delta<-(dr$poll.delta.for-dr$poll.delta.against);
cor.test(formula=~persuadable+margin.abs,data=dr);
cor.test(formula=~persuadable+margin.delta,data=dr);
dr$outcome[(dr$poll.delta.against>dr$poll.delta.for)]<-1;
dr$outcome[(dr$poll.delta.against<dr$poll.delta.for)]<-(-1);
dr$outcome[(dr$outcome==.)]<-0;
dr$outcome[(dr$poll.delta.against>dr$poll.delta.for)]<-1;
dr$outcome[(dr$poll.delta.against<dr$poll.delta.for)]<-(-1);
dr$outcome[(dr$outcome==null)]<-0;
dr$outcome[(dr$outcome==NA)]<-0;
dr$persuadable<-(dr$poll.before.undecided-dr$poll.after.undecided);
dr$margin.abs<-(dr$poll.after.for-dr$poll.after.against);
dr$margin.delta<-(dr$poll.delta.for-dr$poll.delta.against);
## [1.b:  Tabulate by outcome and then by margin]
addmargins(xtabs(formula=~title+outcome, data=dr),1);
# (21 files) 11/10 (52.3% AGAINST vs. FOR)
summaryBy(formula=poll.before.undecided~outcome, data=dr, FUN=c(mean,median));
# (21 files) A little less than a THIRD of the audience is undecided ahead of a debate
summaryBy(formula=poll.after.undecided~outcome, data=dr, FUN=c(mean,median));
# (21 files) After the debate about 8% remain undecided, meaning that on avg. 22% of the audience is persuadable
summaryBy(formula=persuadable~outcome, data=dr, FUN=c(mean,median));
# (21 files) 22-24% on avg. are persuaded through the debate, assuming that the
#   Audience members with existing opinions do not change their vote.
summaryBy(formula=poll.delta.against~outcome, data=dr, FUN=c(mean,median));
summaryBy(formula=poll.delta.for~outcome, data=dr, FUN=c(mean,median));
# (21 files) Though we don't know whether there is back and forth within the
#   populations with existing opinions, neither side appears to lose support
#   regardless of who wins a debate.
summaryBy(formula=margin.abs~outcome, data=dr, FUN=c(mean,median));
# (21 files) The margin of victory (by audience final polling) is on avg. 34-35%
summaryBy(formula=margin.delta~outcome, data=dr, FUN=c(mean,median));
# (21 files) The margin of victory (by delta) is between 14 and 22%
cor.test(formula=~persuadable+margin.delta,data=dr);
cor.test(formula=~persuadable+outcome,data=dr);
View(dr)
dr$outcome<-as.numeric(dr$outcome);
cor.test(formula=~persuadable+outcome,data=dr);
cor.test(formula=~outcome+persuadable,data=dr);
cor.test(formula=~outcome+poll.before.for,data=dr);
cor.test(formula=~outcome+poll.before.against,data=dr);
cor.test(formula=~outcome+poll.before.undecided,data=dr);
cor.test(formula=~outcome+persuadable,data=dr);
cor.test(formula=outcome~poll.before.for,data=dr);
cor.test(formula=outcome~poll.against+poll.before.for,data=dr);
cor.test(formula=outcome~poll.before.against+poll.before.for,data=dr);
